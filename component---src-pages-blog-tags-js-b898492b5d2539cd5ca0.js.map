{"version":3,"file":"component---src-pages-blog-tags-js-b898492b5d2539cd5ca0.js","mappings":"kNAQA,MAAM,OAAEA,EAAM,UAAEC,EAAS,MAAEC,GAAUC,EAAAA,GAE/BC,GAAsBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAZJ,CAAY,uIAK3BL,EAAOU,WAGDT,EAAUU,IAGnBC,EAAAA,GAAOC,WACAb,EAAOU,WAELV,EAAOc,MACDZ,EAAMa,OACRd,EAAUe,IAgEjC,UAzDiBC,IAQV,IAPLC,MACEC,mBAAmB,MAAEC,GACrBC,MACEC,cAAc,MAAEC,KAEnB,SACDC,GACDP,EACC,MAAMQ,EAAWL,EAAMM,MAAK,CAACC,EAAGC,IACvBA,EAAEC,WAAaF,EAAEE,aAG1B,OACEC,EAAAA,cAACC,EAAAA,GAAM,CAACP,SAAUA,GAChBM,EAAAA,cAACE,EAAAA,EAAM,CAACT,MAAOA,IAEfO,EAAAA,cAAC1B,EAAmB,KAClB0B,EAAAA,cAAA,QAAMG,UAAU,cACdH,EAAAA,cAAA,QAAMG,UAAU,SAAQ,KACxBH,EAAAA,cAACI,EAAAA,KAAI,CAACC,GAAG,SAAQ,cAGnBL,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,MAAIG,UAAU,cACXR,EAASW,KAAIC,GACZP,EAAAA,cAAA,MAAIQ,IAAKD,EAAIE,YACXT,EAAAA,cAACI,EAAAA,KAAI,CAACC,GAAI,cAAcK,IAAUH,EAAIE,gBACnCF,EAAIE,WAAW,IAACT,EAAAA,cAAA,QAAMG,UAAU,SAAQ,IAAEI,EAAIR,WAAW,WAM7D,C","sources":["webpack://rubiin.github.io/./src/pages/blog/tags.js"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Layout } from '@components';\nimport styled from 'styled-components';\nimport { theme, mixins, Main } from '@styles';\nconst { colors, fontSizes, fonts } = theme;\n\nconst StyledTagsContainer = styled(Main)`\n  h1 {\n    margin-bottom: 50px;\n  }\n  ul {\n    color: ${colors.lightSlate};\n    columns: 3;\n    li {\n      font-size: ${fontSizes.xxl};\n\n      a {\n        ${mixins.inlineLink};\n        color: ${colors.lightSlate};\n        .count {\n          color: ${colors.slate};\n          font-family: ${fonts.SFMono};\n          font-size: ${fontSizes.md};\n        }\n      }\n    }\n  }\n`;\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n}) => {\n  const sortTags = group.sort((a, b) => {\n    return b.totalCount - a.totalCount;\n  });\n\n  return (\n    <Layout location={location}>\n      <Helmet title={title} />\n\n      <StyledTagsContainer>\n        <span className=\"breadcrumb\">\n          <span className=\"arrow\">&larr;</span>\n          <Link to=\"/blog\">All posts</Link>\n        </span>\n\n        <h1>Tags</h1>\n        <ul className=\"fancy-list\">\n          {sortTags.map(tag => (\n            <li key={tag.fieldValue}>\n              <Link to={`/blog/tags/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} <span className=\"count\">({tag.totalCount})</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </StyledTagsContainer>\n    </Layout>\n  );\n};\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired,\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n  location: PropTypes.object,\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000, filter: { frontmatter: { draft: { ne: true } } }) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["colors","fontSizes","fonts","theme","StyledTagsContainer","styled","Main","withConfig","displayName","componentId","lightSlate","xxl","mixins","inlineLink","slate","SFMono","md","_ref","data","allMarkdownRemark","group","site","siteMetadata","title","location","sortTags","sort","a","b","totalCount","React","Layout","Helmet","className","Link","to","map","tag","key","fieldValue","kebabCase"],"sourceRoot":""}