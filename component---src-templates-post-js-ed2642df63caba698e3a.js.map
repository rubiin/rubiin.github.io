{"version":3,"file":"component---src-templates-post-js-ed2642df63caba698e3a.js","mappings":"4NASA,MAAM,OAAEA,GAAWC,EAAAA,GAEbC,GAAsBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAZJ,CAAY,uBAGlCK,EAAmBL,EAAAA,QAAOM,OAAMJ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAbJ,CAAa,iDAMhCO,EAAoBP,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAVJ,CAAU,uGAcvBH,EAAOY,YAIdC,EAAuBV,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,kEAInCW,EAAAA,GAAMC,KAAK,4BAsDf,UAnDqBC,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACtC,MAAM,YAAEG,EAAW,KAAEC,EAAI,QAAEC,GAAYJ,EAAKK,gBACtC,MAAEC,EAAK,KAAEC,EAAI,KAAEC,GAASN,EAExBO,EAAO,CACXH,QACAI,YAAaN,EACbO,QAASV,EAASW,MAGpB,OACEC,EAAAA,cAACC,EAAAA,GAAM,CAACb,SAAUA,GAChBY,EAAAA,cAACE,EAAAA,GAAI,CAACC,SAAUP,IAEhBI,EAAAA,cAAC5B,EAAmB,KAClB4B,EAAAA,cAAA,QAAMI,UAAU,cACdJ,EAAAA,cAAA,QAAMI,UAAU,SAAQ,KACxBJ,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,SAAQ,cAEnBN,EAAAA,cAACjB,EAAoB,KACnBiB,EAAAA,cAACO,EAAAA,EAAK,CAACnB,SAAUA,EAAUK,MAAOA,KAEpCO,EAAAA,cAACtB,EAAgB,KACfsB,EAAAA,cAAA,MAAII,UAAU,gBAAgBX,GAC9BO,EAAAA,cAAA,KAAGI,UAAU,YACXJ,EAAAA,cAAA,YACG,IAAIQ,KAAKd,GAAMe,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,OACPC,IAAK,aAGTZ,EAAAA,cAAA,YAAM,OACLL,GACCA,EAAKkB,OAAS,GACdlB,EAAKmB,KAAI,CAACC,EAAKC,IACbhB,EAAAA,cAACK,EAAAA,KAAI,CAACY,IAAKD,EAAGV,GAAI,cAAcY,IAAUH,MAASX,UAAU,OAAM,IAC/DW,OAMZf,EAAAA,cAACpB,EAAiB,CAACuC,wBAAyB,CAAEC,OAAQ9B,MAGxDU,EAAAA,cAACqB,EAAAA,EAAU,MACJ,C","sources":["webpack://rubiin.github.io/./src/templates/post.js"],"sourcesContent":["import { Head, Layout } from '@components';\nimport { Main, media, theme } from '@styles';\nimport styled from 'styled-components';\nimport { graphql, Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Share from '@components/share';\nimport Newsletter from '../components/newsletter';\nconst { colors } = theme;\n\nconst StyledPostContainer = styled(Main)`\n  max-width: 1000px;\n`;\nconst StyledPostHeader = styled.header`\n  margin-bottom: 50px;\n  .tag {\n    margin-right: 10px;\n  }\n`;\nconst StyledPostContent = styled.div`\n  margin-bottom: 100px;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 2em 0 1em;\n  }\n\n  p {\n    margin: 1em 0;\n    line-height: 1.5;\n    color: ${colors.lightSlate};\n  }\n`;\n\nconst StyledShareContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 30px;\n  ${media.thone`justify-content: center;`};\n`;\n\nconst PostTemplate = ({ data, location }) => {\n  const { frontmatter, html, excerpt } = data.markdownRemark;\n  const { title, date, tags } = frontmatter;\n\n  const meta = {\n    title,\n    description: excerpt,\n    siteUrl: location.href,\n  };\n\n  return (\n    <Layout location={location}>\n      <Head metadata={meta} />\n\n      <StyledPostContainer>\n        <span className=\"breadcrumb\">\n          <span className=\"arrow\">&larr;</span>\n          <Link to=\"/blog\">All posts</Link>\n        </span>\n        <StyledShareContainer>\n          <Share location={location} title={title} />\n        </StyledShareContainer>\n        <StyledPostHeader>\n          <h1 className=\"medium-title\">{title}</h1>\n          <p className=\"subtitle\">\n            <time>\n              {new Date(date).toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n              })}\n            </time>\n            <span>&nbsp;&mdash;&nbsp;</span>\n            {tags &&\n              tags.length > 0 &&\n              tags.map((tag, i) => (\n                <Link key={i} to={`/blog/tags/${kebabCase(tag)}/`} className=\"tag\">\n                  #{tag}\n                </Link>\n              ))}\n          </p>\n        </StyledPostHeader>\n\n        <StyledPostContent dangerouslySetInnerHTML={{ __html: html }} />\n      </StyledPostContainer>\n\n      <Newsletter />\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nPostTemplate.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $path } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date\n        slug\n        tags\n        cover_image\n      }\n    }\n  }\n`;\n"],"names":["colors","theme","StyledPostContainer","styled","Main","withConfig","displayName","componentId","StyledPostHeader","header","StyledPostContent","div","lightSlate","StyledShareContainer","media","thone","_ref","data","location","frontmatter","html","excerpt","markdownRemark","title","date","tags","meta","description","siteUrl","href","React","Layout","Head","metadata","className","Link","to","Share","Date","toLocaleDateString","year","month","day","length","map","tag","i","key","kebabCase","dangerouslySetInnerHTML","__html","Newsletter"],"sourceRoot":""}