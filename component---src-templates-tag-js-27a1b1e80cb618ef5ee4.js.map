{"version":3,"file":"component---src-templates-tag-js-27a1b1e80cb618ef5ee4.js","mappings":"wMAOA,MAAM,OAAEA,EAAM,UAAEC,GAAcC,EAAAA,GAExBC,EAAaC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAVJ,CAAU,wCAIvBK,EAAAA,GAAOC,YAIPC,GAAsBP,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAZJ,CAAY,+OAQlCK,EAAAA,GAAOC,WAIPD,EAAAA,GAAOI,YAIMZ,EAAUa,GAYVd,EAAOe,WAITf,EAAOgB,MACHf,EAAUgB,IAuE/B,UA7DoBC,IAAsC,IAArC,YAAEC,EAAW,KAAEC,EAAI,SAAEC,GAAUH,EAClD,MAAM,IAAEI,GAAQH,GACV,MAAEI,GAAUH,EAAKI,kBAEjBC,EAAO,CACXC,MAAO,cAAcC,IAAAA,OACrBC,YAAa,iCACbC,QAASR,EAASS,MAKpB,OAFAC,QAAQC,IAAI,CAAET,UAGZU,EAAAA,cAACC,EAAAA,GAAM,CAACb,SAAUA,GAChBY,EAAAA,cAACE,EAAAA,GAAI,CAACC,SAAUX,IAChBQ,EAAAA,cAACtB,EAAmB,KAClBsB,EAAAA,cAAA,QAAMI,UAAU,cACdJ,EAAAA,cAAA,QAAMI,UAAU,SAAQ,KACxBJ,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,SAAQ,cAGnBN,EAAAA,cAAA,UACEA,EAAAA,cAAA,QAAMI,UAAU,OAAM,qBACFJ,EAAAA,cAAA,QAAMI,UAAU,QAAO,IAAEf,IAE7CW,EAAAA,cAAA,YACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,cAAa,mBAI1BN,EAAAA,cAAA,MAAII,UAAU,cACXd,EAAMiB,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAM,MAAEf,EAAK,KAAEiB,EAAI,KAAEC,EAAI,KAAEC,GAASH,EAAKI,YACzC,OACEb,EAAAA,cAAA,MAAIc,IAAKJ,GACPV,EAAAA,cAAA,UACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAII,GAAOjB,IAEnBO,EAAAA,cAAA,KAAGI,UAAU,YACXJ,EAAAA,cAAA,YACG,IAAIe,KAAKJ,GAAMK,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,OACPC,IAAK,aAGTnB,EAAAA,cAAC9B,EAAU,KACR0C,EAAKL,KAAI,CAAClB,EAAK+B,IACdpB,EAAAA,cAACqB,EAAAA,GAAO,CAACP,IAAKM,EAAGE,KAAMjC,QAI1B,MAKN,C","sources":["webpack://rubiin.github.io/./src/templates/tag.js"],"sourcesContent":["import { Head, Layout, TagItem } from \"@components\";\nimport { Main, mixins, theme } from \"@styles\";\nimport { Link, graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport config from \"../config\";\nconst { colors, fontSizes } = theme;\n\nconst StyledTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  a {\n    ${mixins.inlineLink};\n  }\n`;\n\nconst StyledTagsContainer = styled(Main)`\n  max-width: 1000px;\n\n  span.tag {\n    font-size: 25px;\n  }\n\n  a {\n    ${mixins.inlineLink};\n  }\n\n  h1 {\n    ${mixins.flexBetween};\n    margin-bottom: 50px;\n\n    a {\n      font-size: ${fontSizes.lg};\n      font-weight: 400;\n    }\n  }\n\n  ul {\n    li {\n      font-size: 24px;\n      h2 {\n        font-size: inherit;\n        margin: 0;\n        a {\n          color: ${colors.lightSlate};\n        }\n      }\n      .subtitle {\n        color: ${colors.slate};\n        font-size: ${fontSizes.sm};\n\n        .tag {\n          margin-right: 5px;\n        }\n      }\n    }\n  }\n`;\n\nconst TagTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  const meta = {\n    title: `All tags | ${config.name}`,\n    description: \"A list of all tags on the site\",\n    siteUrl: location.href,\n  };\n\n  console.log({ edges });\n\n  return (\n    <Layout location={location}>\n      <Head metadata={meta} />\n      <StyledTagsContainer>\n        <span className=\"breadcrumb\">\n          <span className=\"arrow\">&larr;</span>\n          <Link to=\"/blog\">All posts</Link>\n        </span>\n\n        <h1>\n          <span className=\"tag\">\n            Showing Post From <span className=\"wavy\">#{tag}</span>\n          </span>\n          <span>\n            <Link to=\"/blog/tags\">View all tags</Link>\n          </span>\n        </h1>\n\n        <ul className=\"fancy-list\">\n          {edges.map(({ node }) => {\n            const { title, slug, date, tags } = node.frontmatter;\n            return (\n              <li key={slug}>\n                <h2>\n                  <Link to={slug}>{title}</Link>\n                </h2>\n                <p className=\"subtitle\">\n                  <time>\n                    {new Date(date).toLocaleDateString(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"long\",\n                      day: \"numeric\",\n                    })}\n                  </time>\n                  <StyledTags>\n                    {tags.map((tag, i) => (\n                      <TagItem key={i} text={tag}></TagItem>\n                    ))}\n                  </StyledTags>\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n      </StyledTagsContainer>\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nTagTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired,\n      ),\n    }),\n  }),\n  location: PropTypes.object,\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            date\n            slug\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["colors","fontSizes","theme","StyledTags","styled","div","withConfig","displayName","componentId","mixins","inlineLink","StyledTagsContainer","Main","flexBetween","lg","lightSlate","slate","sm","_ref","pageContext","data","location","tag","edges","allMarkdownRemark","meta","title","config","description","siteUrl","href","console","log","React","Layout","Head","metadata","className","Link","to","map","_ref2","node","slug","date","tags","frontmatter","key","Date","toLocaleDateString","year","month","day","i","TagItem","text"],"sourceRoot":""}