{"version":3,"file":"component---src-pages-blog-index-js-3a4f5bb00330550c0cd9.js","mappings":"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","sources":["webpack://rubiin.github.io/./src/components/newsletter.js","webpack://rubiin.github.io/./src/pages/blog/index.js"],"sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { Main, media, mixins } from '@styles';\nimport styled from 'styled-components';\n\nconst StyledSubscribeForm = styled.div`\n  width: 40%;\n  .formkit-form[data-uid='589be1abe0'] {\n    border: none !important;\n    font-size: 13px;\n    font-family: 'SF Mono', 'Fira Code', 'Fira Mono', 'Roboto Mono', monospace;\n  }\n\n  .formkit-submit {\n    background-color: transparent !important;\n    border: 1px solid #64ffda !important;\n  }\n\n  ${media.tablet`width: 80%;`};\n  ${media.phablet`width: 100%;`};\n`;\n\nconst SubscribeDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nclass Newsletter extends Component {\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = 'https://rubin-bhandari.ck.page/589be1abe0/index.js';\n    script.async = true;\n    script.setAttribute('data-uid', '589be1abe0');\n    this.instance.appendChild(script);\n  }\n\n  render() {\n    return (\n      <SubscribeDiv>\n        <StyledSubscribeForm ref={el => (this.instance = el)}></StyledSubscribeForm>\n      </SubscribeDiv>\n    );\n  }\n}\n\nexport default Newsletter;\n","import { Layout } from '@components';\nimport config from '@config';\nimport { Button, Main, media, mixins, theme } from '@styles';\nimport { graphql, Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport Newsletter from '../../components/newsletter';\nconst { colors, fontSizes, fonts } = theme;\n\nconst StyledTagsContainer = styled.div`\n  width: 200px;\n  margin-top: 100px;\n  ${media.bigDesktop`display:none;`};\n  ${media.phablet`display: none;`};\n`;\n\nconst StyledMainContainer = styled(Main)`\n  & > header {\n    text-align: center;\n    margin-bottom: 100px;\n\n    a {\n      &:hover,\n      &:focus {\n        cursor:\n          url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>⚡</text></svg>\")\n            20 0,\n          auto;\n      }\n    }\n  }\n\n  footer {\n    ${mixins.flexBetween};\n    margin-top: 20px;\n    width: 100%;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButtonContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledFlex = styled.div`\n  margin-top: 20px;\n  display: flex;\n  width: inherit;\n  gap: 10%;\n  justify-content: space-around;\n\n  .posts {\n    display: flex;\n    flex-direction: column;\n    width: 80%;\n    gap: 0.5rem;\n  }\n`;\n\nconst StyledPostInner = styled.div`\n  ${mixins.boxShadow};\n  ${mixins.flexBetween};\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  padding: 2rem 1.75rem;\n  height: 100%;\n  border-radius: ${theme.borderRadius};\n  transition: ${theme.transition};\n  background-color: ${colors.lightNavy};\n  header,\n  a {\n    width: 100%;\n  }\n`;\nconst StyledAllCategory = styled(Link)`\n  padding: 1rem;\n`;\n\nconst StyledPost = styled.div`\n  transition: ${theme.transition};\n  cursor: default;\n  &:hover,\n  &:focus {\n    outline: 0;\n    ${StyledPostInner} {\n      transform: translateY(-5px);\n    }\n  }\n`;\nconst StyledReadingTime = styled.span`\n  font-family: ${fonts.SFMono};\n  font-size: ${fontSizes.smish};\n  color: ${colors.lightSlate};\n`;\nconst StyledDate = styled(StyledReadingTime)`\n  text-transform: uppercase;\n`;\n\nconst StyledReadingTimeContainer = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  justify-content: space-between;\n`;\n\nconst StyledPostHeader = styled.div`\n  ${mixins.flexBetween};\n  margin-bottom: 30px;\n`;\nconst StyledFolder = styled.div`\n  color: ${colors.green};\n  svg {\n    width: 40px;\n    height: 40px;\n  }\n`;\nconst StyledPostName = styled.h5`\n  margin: 0 0 10px;\n  font-size: ${fontSizes.xxl};\n  color: ${colors.lightestSlate};\n`;\nconst StyledPostDescription = styled.div`\n  font-size: 17px;\n  color: ${colors.lightSlate};\n`;\n\nconst StyledTags = styled.ul`\n  flex-wrap: wrap;\n  display: flex;\n  align-items: flex-end;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  li {\n    font-family: ${fonts.SFMono};\n    font-size: ${fontSizes.xs};\n    color: ${colors.green};\n    line-height: 1.75;\n    margin-right: 15px;\n    &:last-of-type {\n      margin-right: 0;\n    }\n    a {\n      ${mixins.inlineLink};\n    }\n  }\n`;\n\nconst StyledToggleButton = styled(Button)`\n  padding: 0.5rem 0.7rem;\n  margin: 0.4rem;\n`;\n\nconst StyledMoreButton = styled(Button)`\n  margin: 40px 0;\n  padding: 1.25rem 10rem;\n  ${media.thone`padding:1.25rem 6rem;`};\n  ${media.thone`padding:1.25rem 4rem;`};\n  ${media.tiny`padding:1.25rem 4rem;`};\n`;\n\nconst StyledLatestPostHeader = styled.h1`\n    margin: 0  auto;\n    margin-bottom: 1rem;\n}\n`;\n\nconst BlogPage = ({ location, data }) => {\n  const group = data.allMarkdownRemark.group;\n  const GRID_LIMIT = 4;\n\n  const posts = data.allMarkdownRemark.edges;\n  const [toggleText, setToggleTxt] = useState('Featured');\n  const [postsToShow, setPostsToShow] = useState(posts.slice(0, GRID_LIMIT));\n\n  const handleToggle = () => {\n    // if toggleText is Featured, show featured posts\n    if (toggleText === 'Featured') {\n      setToggleTxt('Recent');\n\n      setPostsToShow(posts.filter(({ node }) => node.frontmatter.featured).slice(0, GRID_LIMIT));\n    } else {\n      setPostsToShow(posts.slice(0, GRID_LIMIT));\n\n      setToggleTxt('Featured');\n    }\n  };\n\n  const sortTags = group\n    .sort((a, b) => {\n      return b.totalCount - a.totalCount;\n    })\n    .slice(0, 5);\n\n  const showMore = () => {\n    if (toggleText === 'Featured') {\n      setPostsToShow(posts.slice(0, postsToShow.length + GRID_LIMIT));\n    } else {\n      setPostsToShow(\n        posts\n          .filter(({ node }) => node.frontmatter.featured === true)\n          .slice(0, postsToShow.length + GRID_LIMIT),\n      );\n    }\n  };\n\n  const options = { year: 'numeric', month: 'short', day: 'numeric' };\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>Blog | {config.name}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}/blog`} />\n      </Helmet>\n\n      <StyledMainContainer>\n        <StyledFlex>\n          <div className=\"posts\">\n            <StyledLatestPostHeader className=\"small-title wavy\">\n              {toggleText === 'Featured' ? 'Recent' : 'Featured'} Posts\n            </StyledLatestPostHeader>\n\n            <StyledButtonContainer>\n              <StyledToggleButton onClick={() => handleToggle()}>{toggleText}</StyledToggleButton>\n            </StyledButtonContainer>\n\n            {posts.length > 0 &&\n              postsToShow.map(({ node }, i) => {\n                const { frontmatter, timeToRead, excerpt } = node;\n                const { title, slug, date, tags } = frontmatter;\n                const d = new Date(date);\n\n                return (\n                  <StyledPost key={i} tabIndex=\"0\">\n                    <StyledPostInner>\n                      <header>\n                        <Link to={slug}>\n                          <StyledPostHeader>\n                            <StyledFolder></StyledFolder>\n                          </StyledPostHeader>\n                          <StyledReadingTimeContainer>\n                            <StyledDate>{`📆 ${d.toLocaleDateString('en-us', options)}`}</StyledDate>\n                            <StyledReadingTime>{`⏱️ ${timeToRead} min read`}</StyledReadingTime>\n                          </StyledReadingTimeContainer>\n                          <StyledPostName>{title}</StyledPostName>\n                          <StyledPostDescription>{excerpt}</StyledPostDescription>\n                        </Link>\n                      </header>\n                      <footer>\n                        <StyledTags>\n                          {tags.map((tag, i) => (\n                            <li key={i}>\n                              <Link to={`/blog/tags/${kebabCase(tag)}/`}>#{tag}</Link>\n                            </li>\n                          ))}\n                        </StyledTags>\n                      </footer>\n                    </StyledPostInner>\n                  </StyledPost>\n                );\n              })}\n            <StyledButtonContainer>\n              <StyledMoreButton onClick={() => showMore()}>Show More</StyledMoreButton>\n            </StyledButtonContainer>\n          </div>\n          <StyledTagsContainer>\n            <h2 className=\"small-text\">Read more on</h2>\n            <ul className=\"fancy-list\">\n              {sortTags.map(tag => (\n                <li key={tag.fieldValue}>\n                  <Link to={`/blog/tags/${kebabCase(tag.fieldValue)}/`}>\n                    {tag.fieldValue} <span className=\"count\">({tag.totalCount})</span>\n                  </Link>\n                </li>\n              ))}\n              <StyledAllCategory to={`/blog/tags`}>All tags</StyledAllCategory>\n            </ul>\n          </StyledTagsContainer>\n        </StyledFlex>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\n\nBlogPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/posts/\" }, frontmatter: { draft: { ne: true } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            date\n            tags\n            draft\n            featured\n          }\n          excerpt\n          timeToRead\n        }\n      }\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["StyledSubscribeForm","styled","div","withConfig","displayName","componentId","media","tablet","phablet","SubscribeDiv","Newsletter","_Component","apply","arguments","_inheritsLoose","_proto","prototype","componentDidMount","script","document","createElement","src","async","setAttribute","this","instance","appendChild","render","React","ref","el","Component","colors","fontSizes","fonts","theme","StyledTagsContainer","bigDesktop","StyledMainContainer","Main","mixins","flexBetween","StyledButtonContainer","StyledFlex","StyledPostInner","boxShadow","borderRadius","transition","lightNavy","StyledAllCategory","Link","StyledPost","StyledReadingTime","span","SFMono","smish","lightSlate","StyledDate","StyledReadingTimeContainer","StyledPostHeader","StyledFolder","green","StyledPostName","h5","xxl","lightestSlate","StyledPostDescription","StyledTags","ul","xs","inlineLink","StyledToggleButton","Button","StyledMoreButton","thone","tiny","StyledLatestPostHeader","h1","_ref","location","data","group","allMarkdownRemark","posts","edges","toggleText","setToggleTxt","useState","postsToShow","setPostsToShow","slice","sortTags","sort","a","b","totalCount","options","year","month","day","Layout","Helmet","config","rel","href","className","onClick","filter","_ref2","node","frontmatter","featured","length","map","_ref4","i","timeToRead","excerpt","title","slug","date","tags","d","Date","key","tabIndex","to","toLocaleDateString","tag","kebabCase","_ref3","fieldValue"],"sourceRoot":""}