{"version":3,"file":"component---src-pages-archive-js-d0f9fa1a69d8b46ccb87.js","mappings":"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","sources":["webpack://rubiin.github.io/./src/pages/archive.js"],"sourcesContent":["import { Layout, Head } from \"@components\";\nimport { IconExternal, IconGitHub } from \"@components/icons\";\nimport { srConfig, name } from \"@config\";\nimport { Main, media, mixins, theme } from \"@styles\";\nimport sr from \"@utils/sr\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nconst { colors, fonts, fontSizes } = theme;\n\nconst StyledMainContainer = styled(Main)``;\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n  ${media.tablet`\n    margin: 100px -10px;\n  `};\n`;\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  .hide-on-mobile {\n    ${media.tablet`\n      display: none;\n    `};\n  }\n\n  tbody tr {\n    transition: ${theme.transition};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.lightNavy};\n    }\n  }\n  th,\n  td {\n    cursor: default;\n    line-height: 1.5;\n    padding: 10px 20px;\n    ${media.tablet`\n      padding: 10px;\n    `};\n  }\n  th {\n    text-align: left;\n  }\n  td {\n    &.year {\n      width: 10%;\n      ${media.tablet`\n        font-size: ${fontSizes.sm};\n      `};\n    }\n    &.title {\n      padding-top: 15px;\n      color: ${colors.lightestSlate};\n      font-size: ${fontSizes.xl};\n      font-weight: 700;\n    }\n    &.company {\n      width: 15%;\n      padding-top: 15px;\n      font-size: ${fontSizes.lg};\n    }\n    &.tech {\n      font-size: ${fontSizes.xs};\n      font-family: ${fonts.SFMono};\n    }\n    &.links {\n      span {\n        ${mixins.flexBetween};\n        a + a {\n          margin-left: 10px;\n        }\n        svg {\n          width: 20px;\n          height: 20px;\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  useEffect(() => {\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig());\n    revealProjects.current.forEach((ref, i) =>\n      sr.reveal(ref, srConfig(i * 10)),\n    );\n  }, []);\n\n  const meta = {\n    title: `Archive | ${name}`,\n    siteUrl: location.href,\n    description: \"A big list of things I’ve worked on\",\n  };\n\n  return (\n    <Layout location={location}>\n      <Head metadata={meta} />\n\n      <StyledMainContainer>\n        <header ref={revealTitle}>\n          <h1 className=\"big-title\">Archive</h1>\n          <p className=\"subtitle\">A big list of things I’ve worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Made at</th>\n                <th className=\"hide-on-mobile\">Built with</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const { date, github, external, title, tech, company } =\n                    node.frontmatter;\n                  return (\n                    <tr key={i} ref={(el) => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                      <td className=\"title\">{title}</td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i}>\n                              <span key={i}>{item}</span>\n                              {i !== tech.length - 1 && (\n                                <span>&nbsp;&middot;&nbsp;</span>\n                              )}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <span>\n                          {github ? (\n                            <a\n                              href={github}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"GitHub Link\"\n                            >\n                              <IconGitHub />\n                            </a>\n                          ) : (\n                            <span aria-label=\"Empty\">—</span>\n                          )}\n                          {external ? (\n                            <a\n                              href={external}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"External Link\"\n                            >\n                              <IconExternal />\n                            </a>\n                          ) : (\n                            <span aria-label=\"Empty\">—</span>\n                          )}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </StyledTable>\n        </StyledTableContainer>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { eq: false } }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["colors","fonts","fontSizes","theme","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledTableContainer","div","media","tablet","StyledTable","table","transition","lightNavy","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexBetween","_ref","location","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","meta","title","name","siteUrl","href","description","React","Layout","Head","metadata","className","length","map","_ref2","node","date","github","external","tech","company","frontmatter","key","el","Date","getFullYear","item","target","rel","IconGitHub","IconExternal"],"sourceRoot":""}